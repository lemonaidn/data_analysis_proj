theme_minimal()
# Display the plot
print(ggplot())
intern_allowances <- house_spend_18_22 |>
filter(program== "INTERN ALLOWANCES") |>
filter(purpose == "INTERN ALLOWANCES TOTALS:") #|>
select(-start_date, -end_date, -sort_sequence, -purpose, -year, -fiscal_year_or_legislative_year)
View(house_spend_18_22)
intern_allowances <- house_spend_18_22 |>
filter(program== "INTERN ALLOWANCES") |>
filter(purpose == "INTERN ALLOWANCES TOTALS:") |>
select(-start_date, -end_date, -sort_sequence, -purpose, -year, -fiscal_year_or_legislative_year)
intern_allowances |>
group_by(bioguide_id, office_year) |>
summarise(annual_intern_spend = sum(amount))|>
arrange(desc(annual_intern_spend))
# Okay, it looks like in 2022, many offices were spending $35,000 on interns or just a little less. There must have been a cap. Let's look at 2021.
intern_allowances |>
filter(office_year == 2021)|>
group_by(bioguide_id, office_year) |>
summarise(annual_intern_spend = sum(amount))|>
arrange(desc(annual_intern_spend))
# Here the cap appears to be $25,0000. Interesting, the limit must have changed. How about 2020?
intern_allowances |>
filter(office_year == 2020)|>
group_by(bioguide_id, office_year) |>
summarise(annual_intern_spend = sum(amount))|>
arrange(desc(annual_intern_spend))
# Alright, that year seemed to also be a $25,0000 cap. How about 2019?
intern_allowances |>
filter(office_year == 2019)|>
group_by(bioguide_id, office_year) |>
summarise(annual_intern_spend = sum(amount))|>
arrange(desc(annual_intern_spend))
# Huh. Jon Carter spent nearly $30,000 on interns in 2019, when everyone else was spending a maximum of $20,000. Let's look closer at Carter's intern spend in 2019.
house_spend_18_22 |>
filter(office_year == 2019)|>
filter(bioguide_id == "C001051")|>
filter(purpose == "INTERN ALLOWANCES TOTALS:")
# Why does Carter have 2 entries for quarters 2, 3 & 4 in 2019? We need to so some digging.
carter <- spend_with_member_info |>
filter(bioguide_id == "C001051")|>
filter(sort_sequence == "DETAIL")|>
filter(program == "INTERN ALLOWANCES")|>
mutate(office_year = as.numeric(sub(".*?(\\d{4}).*", "\\1", spend_with_member_info$office)))
View(spend_with_member_info)
carter <- spend_with_member_info |>
filter(bioguide_id == "C001051")|>
filter(sort_sequence == "DETAIL")|>
filter(program == "INTERN ALLOWANCES")
View(carter)
carter <- spend_with_member_info |>
filter(bioguide_id == "C001051")|>
filter(sort_sequence == "DETAIL")|>
filter(program == "INTERN ALLOWANCES")|>
mutate(office_year = as.numeric(sub(".*?(\\d{4}).*", "\\1", spend_with_member_info$office)))
write_csv(spend_with_member_info, "data/spend_with_member_info.csv")
# Begin by reading in the four dataframes that were created in "clean_only.rmd"
spend_with_member_info <- read_csv("data/spend_with_member_info.csv")
dmv_spend_with_member_info <- read_csv("data/dam_spend_with_member_info.csv")
setwd("~/Data Journalism/CFS-Top-Secret/major_assignments/data_analysis_proj")
dmv_spend_with_member_info <- read_csv("data/dmv_spend_with_member_info.csv")
house_spend_18_22 <- read_csv("data/house_spend_18_22.csv")
totals_dmv_spend <- read_csv("data/totals_dmv_spend.csv")
# Turn off scientific notation.
options(scipen=999)
# Load libraries.
library(tidyverse)
library(readr)
library(scales)
library(janitor)
knitr::opts_chunk$set(echo = TRUE)
# Turn off scientific notation.
options(scipen=999)
# Load libraries.
library(tidyverse)
library(readr)
library(scales)
library(janitor)
# Begin by reading in the four dataframes that were created in "clean_only.rmd"
spend_with_member_info <- read_csv("data/spend_with_member_info.csv")
dmv_spend_with_member_info <- read_csv("data/dmv_spend_with_member_info.csv")
house_spend_18_22 <- read_csv("data/house_spend_18_22.csv")
totals_dmv_spend <- read_csv("data/totals_dmv_spend.csv")
# Let's look at the spending categories (column is called purpose) to get a general sense of where reps are using their budgets.
totals_dmv_spend_purpose <- totals_dmv_spend %>%
group_by(purpose) %>%
summarise(total_expenses = sum(amount)) %>%
arrange(desc(total_expenses))
totals_dmv_spend_purpose
# OFFICIAL EXPENSES OF MEMBER TOTALS sounds really vague, and it's the top category by far with a spend of $135,333,002.69. We also notice that Official Expenses of Members is one of the two options for the "program" column in totals_dmv_spend. That seems like a red flag.
# The other value in the program column is INTERN ALLOWANCES. We have a column in totals_dmv_spend_purpose called INTERN ALLOWANCES TOTALS: as well, which totals $1,532,417.41
# Are these two values in the purpose category redundant? Let's save these numbers, then filter the two rows out and see if they equal the sum of all other purposes that remain.
official <- 135333002.69
interns <- 1532417.41
totals_dmv_spend_purpose <- totals_dmv_spend %>%
filter(purpose != "OFFICIAL EXPENSES OF MEMBERS TOTALS:")|>
filter(purpose != "INTERN ALLOWANCES TOTALS:")|>
group_by(purpose) %>%
summarise(total_expenses = sum(amount)) %>%
arrange(desc(total_expenses))
totals_dmv_spend_purpose
# What's the sum of all of the remaining 9 categories? Does it equal the sum of OFFICIAL EXPENSES OF MEMBER TOTALS and INTERN ALLOWANCES?
totals_dmv_spend_purpose |>
summarise(total = sum(total_expenses))
without_official_interns <- 136865420
remainder <- (without_official_interns - official - interns)
remainder
# I am not sure why we have $0.10 left over. Upon manually checking the math for the without_official_interns figure, it was actually #136,865,420.10. So we're good!
# Let's make this same change in the totals_dmv_spend so that we are permanently excluding these redundancies when working with that dataframe.
totals_dmv_spend <- totals_dmv_spend %>%
filter(purpose != "OFFICIAL EXPENSES OF MEMBERS TOTALS:")|>
filter(purpose != "INTERN ALLOWANCES TOTALS:")
# Just double checking that now we have only the appropriate 9 options for purpose.
totals_dmv_spend_purpose <- totals_dmv_spend %>%
group_by(purpose) %>%
summarise(total_expenses = sum(amount)) %>%
arrange(desc(total_expenses))
totals_dmv_spend_purpose
# Let's get a percent of total column as well.
totals_dmv_spend_purpose <- totals_dmv_spend_purpose |>
mutate(pct_of_total = (total_expenses/(sum(total_expenses)))*100)
# Looks good!
# Read back in data for house spend.
house_spend_18_22 <- read_csv("data/house_spend_18_22.csv")
# Clean it the same way we did for the DMV members.
house_spend_18_22 <- house_spend_18_22 |>
filter(purpose != "OFFICIAL EXPENSES OF MEMBERS TOTALS:")|>
filter(purpose != "INTERN ALLOWANCES TOTALS:")
house_spend_18_22
# Calculate avg spend for all members, not just those in the DMV. First, confirm that there are 435 unique members per year
house_spend_18_22 <- house_spend_18_22 %>%
filter(!is.na(bioguide_id))
house_spend_18_22 %>%
filter(office_year >= 2018) %>%
group_by(office_year, bioguide_id) %>%
summarise() %>%
group_by(office_year) %>%
summarise(count = n())
# Surprisingly, there are more than 435 members each year even after we've filtered out records without a bioguide_id. Not sure why that is, but we'll need to divide by the numbers above to find our average rather than 435 for every year.
house_spend_18_22_totals <- house_spend_18_22 %>%
group_by(year) %>%
summarise(annual_total = sum(amount)) %>%
mutate(members_per_year = c(451, 447, 442, 451, 448)) %>%
mutate(annual_avg_per_member = annual_total / members_per_year)
house_spend_18_22_totals
# Now do the same process for DMV reps.
totals_dmv_spend %>%
filter(office_year >= 2018) %>%
group_by(office_year, bioguide_id) %>%
summarise() %>%
group_by(office_year) %>%
summarise(count = n())
totals_dmv_spend_totals <- totals_dmv_spend %>%
group_by(year) %>%
summarise(dmv_annual_total = sum(amount)) %>%
mutate(dmv_annual_avg_per_member = dmv_annual_total / 20)
totals_dmv_spend_totals
# Now join to compare side by side.
house_dmv_totals <- house_spend_18_22_totals |>
left_join(totals_dmv_spend_totals, join_by(year))
house_dmv_totals
house_dmv_totals <- house_dmv_totals |>
group_by(year, annual_avg_per_member, dmv_annual_avg_per_member)|>
summarise(difference = annual_avg_per_member - dmv_annual_avg_per_member)
average_total_difference <- mean(house_dmv_totals$difference)
average_total_difference
# So on average, DMV reps spent less every year than the House as a whole did, on average $15,254.09 less per member each year.
# Now let's test the hypothesis that DMV REPS probably spend less on transportation than other members do.
house_spend_18_22_travel <- house_spend_18_22 %>%
filter(purpose == "TRAVEL TOTALS:") %>%
#need to group_by and calculate avgs per year so our avgs aren't skewed based on how many years a member has served
group_by(year) %>%
summarise(annual_total = sum(amount)) %>%
mutate(members_per_year = c(451, 447, 442, 451, 448)) %>%
mutate(annual_avg_per_member = annual_total / members_per_year)
house_spend_18_22_travel
dmv_spend_travel <- totals_dmv_spend %>%
filter(purpose == "TRAVEL TOTALS:") %>%
#need to group_by and calculate avgs per year so our avgs aren't skewed based on how many years a member has served
group_by(year) %>%
summarise(dmv_annual_total = sum(amount)) %>%
mutate(dmv_annual_avg_per_member = dmv_annual_total / 20)
dmv_spend_travel
house_dmv_travel <- house_spend_18_22_travel |>
left_join(dmv_spend_travel, join_by(year))
house_dmv_travel
house_dmv_travel<- house_dmv_travel |>
group_by(year, annual_avg_per_member, dmv_annual_avg_per_member)|>
summarise(difference = annual_avg_per_member - dmv_annual_avg_per_member)
house_dmv_travel
average_difference <- mean(house_dmv_travel$difference)
average_difference
# Hypothesis confirmed that they spend substantially less on travel than other members, on average more $32,870.38 less annually per member. But they only spend ~$15.2K less than others overall, meaning that they are overspending somewhere else.
# First we needed to do a little research about who controlled the House from 2018-2022. It was Republicans in 2018 and Democrats every other year, so we made a simple spreadsheet to import. Let's do that now.
house_majority <- read_csv("data/house_majority.csv")
# Join with the totals_dmv_spend dataframe
totals_dmv_spend <- totals_dmv_spend |>
left_join(house_majority, join_by("office_year" == "year"))
totals_dmv_spend
# We want to find the number of members each party had in the DMV each year. This will eventually allow us to calculate an average spend by party for each year
# first, make a df with one row per member per year, along with their party
all_members_per_year <- totals_dmv_spend %>%
group_by(office_year,bioguide_id,party) %>%
summarise()
all_members_per_year
# calculate party members per year
members_grouped_per_year <- all_members_per_year %>%
group_by(party, office_year) %>%
summarise(party_members_per_year = n()) %>%
arrange(office_year)
members_grouped_per_year
# calculate how much each party spent per year
party_spending_annual <- totals_dmv_spend |>
group_by(party, office_year, majority_party)|>
summarise(party_spend = sum(amount))|>
arrange(desc(party_spend)) %>%
arrange(office_year)
party_spending_annual
# join the dfs and calculate an average spend per member for each party per year from 2018 onward
party_spending_w_rep_numbers <- party_spending_annual %>%
left_join(members_grouped_per_year) %>%
mutate(avg_spend_per_member = party_spend / party_members_per_year) %>%
filter(office_year >=2018)  %>%
arrange(desc(avg_spend_per_member))
party_spending_w_rep_numbers
# Since there isn't a specific date column, we need to go by year. 2020 and 2021 were the main COVID years.
# We need to look at total spending of each category by year:
category_by_year <- totals_dmv_spend |>
filter(office_year >= 2018, office_year <= 2022)|>
group_by(office_year, purpose) |>
summarize(total_spend = sum(amount)) |>
drop_na()
category_by_year
# It's really hard to compare the amounts by just looking at the table. A visualization would greatly help with comparing the different categories:
category_by_year |>
ggplot() +
geom_line(aes(x=office_year, y=total_spend))+
facet_wrap(~purpose) +
labs(x="Year",
y="Amount Spent")
# Because personnel compensation is so much greater than all other categories, it's throwing off the scale of the visualization. Let's remove it and look at the other 8 categories side by side.
category_by_year |>
filter(purpose != "PERSONNEL COMPENSATION TOTALS:")|>
ggplot() +
geom_line(aes(x=office_year, y=total_spend))+
facet_wrap(~purpose) +
labs(x="Year",
y="Amount Spent")
# We can also look more closely at all of the 9 categories.
category_by_year |>
filter(purpose == "PERSONNEL COMPENSATION TOTALS:") |>
ggplot() +
geom_line(aes(x=office_year, y=total_spend))+
labs(x="Year",
y="Amount Spent",
title="PERSONNEL COMPENSATION",
caption="source: ProPublica")
category_by_year |>
filter(purpose == "EQUIPMENT TOTALS:") |>
ggplot() +
geom_line(aes(x=office_year, y=total_spend))+
labs(x="Year",
y="Amount Spent",
title="EQUIPMENT",
caption="source: ProPublica")
category_by_year |>
filter(purpose == "FRANKED MAIL TOTALS:") |>
ggplot() +
geom_line(aes(x=office_year, y=total_spend))+
labs(x="Year",
y="Amount Spent",
title="FRANKED MAIL",
caption="source: ProPublica")
category_by_year |>
filter(purpose == "OTHER SERVICES TOTALS:") |>
ggplot() +
geom_line(aes(x=office_year, y=total_spend))+
labs(x="Year",
y="Amount Spent",
title="OTHER SERVICES",
caption="source: ProPublica")
category_by_year |>
filter(purpose == "PRINTING AND REPRODUCTION TOTALS:") |>
ggplot() +
geom_line(aes(x=office_year, y=total_spend))+
labs(x="Year",
y="Amount Spent",
title="PRINTING AND REPRODUCTION",
caption="source: ProPublica")
category_by_year |>
filter(purpose == "RENT  COMMUNICATION  UTILITIES TOTALS:") |>
ggplot() +
geom_line(aes(x=office_year, y=total_spend))+
labs(x="Year",
y="Amount Spent",
title="RENT COMMUNICATION UTILITIES",
caption="source: ProPublica")
category_by_year |>
filter(purpose == "SUPPLIES AND MATERIALS TOTALS:") |>
ggplot() +
geom_line(aes(x=office_year, y=total_spend))+
labs(x="Year",
y="Amount Spent",
title="SUPPLIES AND MATERIALS",
caption="source: ProPublica")
category_by_year |>
filter(purpose == "TRAVEL TOTALS:") |>
ggplot() +
geom_line(aes(x=office_year, y=total_spend))+
labs(x="Year",
y="Amount Spent",
title="TRAVEL",
caption="source: ProPublica")
# Maybe an overlay of all of the above in Datawrapper would be the best way to look at this. We will explore that for the next milestone.
# What are the top individual expenses from DMV reps, 2018-2022?
totals_dmv_spend |>
group_by(last_name, first_name, purpose, amount)|>
arrange(desc(amount))
# Create a new column that sums an offices expenses into a total sum.
spend_by_office <- totals_dmv_spend |>
filter(office_year >= 2018) |>
group_by(last_name, first_name, office_year)|>
summarise(office_total = sum(amount))
# Arrange to see which office spent the least over a year.
spend_by_office |>
arrange(office_total)
# If running "post-clean," read back in dmv_spend_with_member_info
dmv_spend_with_member_info <- read_csv("data/dmv_spend_with_member_info.csv")
# Look at employee compensation in the house for full-time staff.
details_dmv_staff_pay <- dmv_spend_with_member_info %>%
filter(category == "PERSONNEL COMPENSATION") %>%
filter(office_year >= 2018) %>%
# exclude interns, temporary and part-time employees, and total/subtotal rows
filter(program != "INTERN ALLOWANCES") %>%
filter(purpose != "PERSONNEL COMPENSATION TOTALS:" & purpose != "TEMPORARY EMPLOYEE" & purpose != "PAID INTERN" & purpose != "PART-TIME EMPLOYEE (OTHER COMPENSATION)" & purpose != "PART-TIME EMPLOYEE (OTHER COMPENSATION)" & purpose != "PART-TIME EMPLOYEE" & purpose != "OFFICE TOTALS:" & purpose != "OFFICIAL EXPENSES OF MEMBERS TOTALS") %>%
select(-organization_code, -program_code, -budget_object_class, -data_source, -document, -vendor_id, -budget_object_code, -transcode, -recordid, -id, -sort_subtotal_description, -transaction_date, -date)
details_dmv_staff_pay
details_dmv_staff_pay <- details_dmv_staff_pay %>%
mutate(days_covered = as.numeric(difftime(end_date, start_date, units = "days"))+1) %>%
mutate(est_quarterly_pay = amount / days_covered * 91.25) %>%
mutate(est_annual_pay = est_quarterly_pay * 4)
details_dmv_staff_pay
cleaned_details_dmv_staff_pay <- details_dmv_staff_pay %>%
filter(!str_detect(purpose, "OTHER COMPENSATION") & !str_detect(purpose, "OVERTIME")) %>%
select(office_year, payee, purpose, est_annual_pay) %>%
distinct() %>%
group_by(office_year, purpose) %>%
summarise(avg_salary = sum(est_annual_pay) / n()) %>%
arrange(avg_salary)
cleaned_details_dmv_staff_pay
# get a df with avg annual pay for leg aides, press secs, and schedulers (for job titles ONLY described as schedulers, none with dual roles)
cleaned_details_dmv_staff_pay <- cleaned_details_dmv_staff_pay %>%
filter(purpose == "SCHEDULER" | purpose == "LEGISLATIVE AIDE" | purpose == "PRESS SECRETARY") %>%
rename("job_title" = "purpose",
"year" = "office_year") %>%
arrange(year)
cleaned_details_dmv_staff_pay
# update the national_wage df to allow for binding and plotting with the staff pay df from above
national_wages <- read_csv("data/national_average_wage_index.csv") |> clean_names() %>%
rename("avg_salary" = "index") %>%
mutate(job_title = "national_wages") %>%
select(year, job_title, avg_salary) %>%
filter(year >= 2018)
national_wages
wage_comparison_df <- rbind(cleaned_details_dmv_staff_pay, national_wages) %>%
arrange(year)
wage_comparison_df
ggplot(wage_comparison_df, aes(x = year, y = avg_salary, color = job_title)) +
geom_line() +
geom_point() +
labs(title = "Leg. aide wages remain far behind national average",
x = "Year",
y = "Average Salary",
color = "Job Title") +
theme_minimal()
# calculate annual % change in personnel expenditures for DMV reps
totals_dmv_spend_pct_change <- totals_dmv_spend %>%
filter(purpose == "PERSONNEL COMPENSATION TOTALS:",
program == "OFFICIAL EXPENSES OF MEMBERS") %>%
group_by(year) %>%
summarise(amount = sum(amount)) %>%
# I got ChatGPT's help with this last step since I wasn't familiar with the "lag" function:
mutate(pct_change = (amount - 18276024) / 18276024 * 100) %>%
mutate(data_source = "Personnel Expenditure Subtotals")
totals_dmv_spend_pct_change
# calculate annual % change in personnel expenditures for national wage avgs
national_wages_pct_change <- national_wages %>%
mutate(pct_change = (avg_salary - 52145.80) / 52145.80 * 100) %>%
mutate(data_source = "National Wage Avgs") %>%
rename("amount" = "avg_salary") %>%
select(-job_title)
national_wages_pct_change
# bind the data
wage_comparison_pct_change_df <- rbind(totals_dmv_spend_pct_change, national_wages_pct_change) %>%
arrange(year)
wage_comparison_pct_change_df
# visualize
ggplot(wage_comparison_pct_change_df, aes(x = year, y = pct_change, color = data_source, group = data_source)) +
geom_line() +
geom_point() +
labs(title = "Growth in House Staff Pay Outpaces National Trends",
x = "Year",
y = "Percent Change vs 2018",
color = "") +
theme_minimal()
# Display the plot
print(ggplot())
intern_allowances <- house_spend_18_22 |>
filter(program== "INTERN ALLOWANCES") |>
filter(purpose == "INTERN ALLOWANCES TOTALS:") |>
select(-start_date, -end_date, -sort_sequence, -purpose, -year, -fiscal_year_or_legislative_year)
intern_allowances |>
group_by(bioguide_id, office_year) |>
summarise(annual_intern_spend = sum(amount))|>
arrange(desc(annual_intern_spend))
# Okay, it looks like in 2022, many offices were spending $35,000 on interns or just a little less. There must have been a cap. Let's look at 2021.
intern_allowances |>
filter(office_year == 2021)|>
group_by(bioguide_id, office_year) |>
summarise(annual_intern_spend = sum(amount))|>
arrange(desc(annual_intern_spend))
# Here the cap appears to be $25,0000. Interesting, the limit must have changed. How about 2020?
intern_allowances |>
filter(office_year == 2020)|>
group_by(bioguide_id, office_year) |>
summarise(annual_intern_spend = sum(amount))|>
arrange(desc(annual_intern_spend))
# Alright, that year seemed to also be a $25,0000 cap. How about 2019?
intern_allowances |>
filter(office_year == 2019)|>
group_by(bioguide_id, office_year) |>
summarise(annual_intern_spend = sum(amount))|>
arrange(desc(annual_intern_spend))
# Huh. Jon Carter spent nearly $30,000 on interns in 2019, when everyone else was spending a maximum of $20,000. Let's look closer at Carter's intern spend in 2019.
house_spend_18_22 |>
filter(office_year == 2019)|>
filter(bioguide_id == "C001051")|>
filter(purpose == "INTERN ALLOWANCES TOTALS:")
# Why does Carter have 2 entries for quarters 2, 3 & 4 in 2019? We need to so some digging.
carter <- spend_with_member_info |>
filter(bioguide_id == "C001051")|>
filter(sort_sequence == "DETAIL")|>
filter(program == "INTERN ALLOWANCES")|>
mutate(office_year = as.numeric(sub(".*?(\\d{4}).*", "\\1", spend_with_member_info$office)))
carter <- spend_with_member_info |>
filter(bioguide_id == "C001051")|>
filter(sort_sequence == "DETAIL")|>
filter(program == "INTERN ALLOWANCES")|>
mutate(office_year = as.numeric(sub(".*?(\\d{4}).*", "\\1", spend_with_member_info$office)))
View(spend_with_member_info)
carter <- spend_with_member_info |>
filter(bioguide_id == "C001051")|>
filter(sort_sequence == "DETAIL")|>
filter(program == "INTERN ALLOWANCES")|>
mutate(office_year = as.numeric(sub(".*?(\\d{4}).*", "\\1", office)))
View(carter)
carter_19 <- carter |>
filter(office_year == 2019)|>
group_by(quarter)|>
summarise(total = sum(amount))
View(carter_19)
carter_19 <- spend_with_member_info |>
filter(bioguide_id == "C001051")|>
filter(sort_sequence == "DETAIL")|>
filter(program == "INTERN ALLOWANCES")|>
mutate(office_year = as.numeric(sub(".*?(\\d{4}).*", "\\1", office)))|>
filter(office_year == 2019)
View(carter_19)
total <- sum(carter_19$amount)
total
intern_allowances |>
filter(office_year == 2018)|>
group_by(bioguide_id, office_year) |>
summarise(annual_intern_spend = sum(amount))|>
arrange(desc(annual_intern_spend))
detail_18 <- spend_with_member_info |>
filter(sort_sequence == "DETAIL")|>
mutate(office_year = as.numeric(sub(".*?(\\d{4}).*", "\\1", office)))|>
filter(office_year == 2018)
View(detail_18)
sequences <- unique(spend_with_member_info$sort_sequence)
sequences
purpose <- unique(spend_with_member_info$purpose)
purpose
intern_rows <- detail_18 |>
filter(str_detect(purpose, "intern", ignore_case = TRUE))
View(detail_18)
intern_rows <- detail_18 |>
filter(str_detect(purpose, "INTERN"))
View(intern_rows)
View(carter_19)
interns_18 <- detail_18 |>
filter(str_detect(purpose, "INTERN"))
View(interns_18)
interns_18  |>
group_by(bioguide_id) |>
summarise(annual_intern_spend = sum(amount))|>
arrange(desc(annual_intern_spend))
interns_18  |>
group_by(bioguide_id, first_name, last_name) |>
summarise(annual_intern_spend = sum(amount))|>
arrange(desc(annual_intern_spend))
massie_interns_18 <- interns_18  |>
filter(bioguide_id == "M001184")
View(massie_interns_18)
massie_total_18 <- sum(massie_interns_18$amount)
massie_total_18
interns_18  |>
group_by(bioguide_id, first_name, last_name) |>
summarise(annual_intern_spend = sum(amount))|>
arrange(desc(annual_intern_spend))
